{"ast":null,"code":"import _objectSpread from \"/Users/Ana/Documents/Evaluacion/Modulo 3/f-m3-evaluacion-final-anajd/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Ana/Documents/Evaluacion/Modulo 3/f-m3-evaluacion-final-anajd/src/App.js\";\nimport React from 'react';\nimport './App.scss';\nimport { FetchCharacters } from './services/FetchCharacters';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport CharacterCard from './components/CharacterCard';\nimport HarryPotterSoundtrack from './audio/HarryPotterSoundtrack.mp3';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: [],\n      filterName: '',\n      favCharacter: [],\n      filterHouse: '',\n      liveStatus: null\n    };\n    this.handleFilterName = this.handleFilterName.bind(this);\n    this.handleFav = this.handleFav.bind(this);\n    this.resetFilters = this.resetFilters.bind(this);\n    this.handleFilterHouse = this.handleFilterHouse.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  getCharacters() {\n    FetchCharacters().then(data => {\n      const newData = data.map((item, index) => {\n        const house = item.house === '' ? 'Without House' : item.house;\n        return _objectSpread({}, item, {\n          id: index,\n          house: house\n        });\n      });\n      this.setState({\n        characters: newData\n      });\n    });\n  }\n\n  handleFilterName(event) {\n    const characterName = event.currentTarget.value;\n    this.setState({\n      filterName: characterName\n    });\n  }\n\n  handleFilterHouse(event) {\n    const characterHouse = event.currentTarget.value;\n    this.setState({\n      filterHouse: characterHouse\n    });\n  }\n\n  handleFilterLive(characters) {\n    const liveStatus = this.state.liveStatus;\n\n    if (liveStatus === null || liveStatus === 'all') {\n      return characters;\n    }\n\n    if (liveStatus === 'live') {\n      return characters.filter(character => character.alive === true);\n    }\n\n    if (liveStatus === 'died') {\n      return characters.filter(character => character.alive === false);\n    }\n  }\n\n  handleFav(event, obj) {\n    const id = parseInt(event.currentTarget.id);\n    const newFav = [...this.state.favCharacter];\n    let index = newFav.indexOf(obj);\n\n    if (this.state.favCharacter.includes(id) === true) {\n      newFav.splice(index, 1);\n    } else {\n      newFav.push(id);\n    }\n\n    this.setState({\n      favCharacter: newFav\n    });\n  }\n\n  resetFilters() {\n    this.setState({\n      filterName: '',\n      filterHouse: ''\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          characters = _this$state.characters,\n          filterName = _this$state.filterName,\n          favCharacter = _this$state.favCharacter,\n          filterHouse = _this$state.filterHouse;\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        handleFilterName: this.handleFilterName,\n        characters: characters,\n        filterName: filterName,\n        favCharacter: favCharacter,\n        handleFav: this.handleFav,\n        filterHouse: filterHouse,\n        handleFilterHouse: this.handleFilterHouse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/detail/:character\",\n      render: takeParams => React.createElement(CharacterCard, {\n        takeParams: takeParams,\n        characters: characters,\n        filterName: filterName,\n        resetFilters: this.resetFilters,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Ana/Documents/Evaluacion/Modulo 3/f-m3-evaluacion-final-anajd/src/App.js"],"names":["React","FetchCharacters","Switch","Route","Home","CharacterCard","HarryPotterSoundtrack","App","Component","constructor","props","state","characters","filterName","favCharacter","filterHouse","liveStatus","handleFilterName","bind","handleFav","resetFilters","handleFilterHouse","componentDidMount","getCharacters","then","data","newData","map","item","index","house","id","setState","event","characterName","currentTarget","value","characterHouse","handleFilterLive","filter","character","alive","obj","parseInt","newFav","indexOf","includes","splice","push","render","takeParams"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { FetchCharacters } from './services/FetchCharacters';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport CharacterCard from './components/CharacterCard';\nimport HarryPotterSoundtrack from './audio/HarryPotterSoundtrack.mp3';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      characters: [],\n      filterName: '',\n      favCharacter: [],\n      filterHouse: '',\n      liveStatus: null\n    };\n\n    this.handleFilterName = this.handleFilterName.bind(this);\n    this.handleFav = this.handleFav.bind(this);\n    this.resetFilters = this.resetFilters.bind(this);\n    this.handleFilterHouse = this.handleFilterHouse.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  getCharacters() {\n    FetchCharacters().then(data => {\n      const newData = data.map((item, index) => {\n        const house = item.house === '' ? 'Without House' : item.house;\n        return { ...item, id: index, house: house };\n      });\n\n      this.setState({\n        characters: newData\n      });\n    });\n  }\n\n  handleFilterName(event) {\n    const characterName = event.currentTarget.value;\n\n    this.setState({\n      filterName: characterName\n    });\n  }\n\n  handleFilterHouse(event) {\n    const characterHouse = event.currentTarget.value;\n\n    this.setState({\n      filterHouse: characterHouse\n    });\n  }\n\n  handleFilterLive(characters) {\n    const { liveStatus } = this.state;\n    if (liveStatus === null || liveStatus === 'all') {\n      return characters;\n    }\n    if (liveStatus === 'live') {\n      return characters.filter(character => character.alive === true);\n    }\n    if (liveStatus === 'died') {\n      return characters.filter(character => character.alive === false);\n    }\n  }\n\n  handleFav(event, obj) {\n    const id = parseInt(event.currentTarget.id);\n    const newFav = [...this.state.favCharacter];\n    let index = newFav.indexOf(obj);\n    if (this.state.favCharacter.includes(id) === true) {\n      newFav.splice(index, 1);\n    } else {\n      newFav.push(id);\n    }\n    this.setState({\n      favCharacter: newFav\n    });\n  }\n\n  resetFilters() {\n    this.setState({\n      filterName: '',\n      filterHouse: ''\n    });\n  }\n\n  render() {\n    const { characters, filterName, favCharacter, filterHouse } = this.state;\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Home\n                handleFilterName={this.handleFilterName}\n                characters={characters}\n                filterName={filterName}\n                favCharacter={favCharacter}\n                handleFav={this.handleFav}\n                filterHouse={filterHouse}\n                handleFilterHouse={this.handleFilterHouse}\n              />\n            )}\n          />\n          <Route\n            path=\"/detail/:character\"\n            render={takeParams => (\n              <CharacterCard\n                takeParams={takeParams}\n                characters={characters}\n                filterName={filterName}\n                resetFilters={this.resetFilters}\n              />\n            )}\n          />\n        </Switch>\n        {/* <audio autoPlay src={HarryPotterSoundtrack} id=\"pDst9A3sqis\" /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}